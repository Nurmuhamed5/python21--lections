'=======строки==========='
# строки - не изменяемый тип данных , который предназначен для хранения текста (последовательности символов), заключенного в одинарные или двойные кавычки
# синтаксис 
string1 = 'строка с одинарными кавычками'
string2 = ' строка с двойными кавычками'
#  error = не правильная строка
string3 = "don't" # внутри двойныъ кавычек все одинарные - просто символы
string4 = '"Makers Bootcamp"' # внутри одинарных кавычекмвсе двойные - просто символы
string5 = """
Многострочный текст
в одинарных кавычыках 
тут можно ставить "любые " ' кавычки'
'''
"""

string5 = '''
Многострочный текст
в одинарных кавычыках 
тут можно ставить "любые " ' кавычки'
"""
'''


"==============экранизация строк============="
# экранизация спец-символов
'\n' # перенос на новую строку
'\t' # табуляция 
'\\' # отоброжение \ (потому что он влется инструкцией, которая влияет на наш код)
'\'' # отоброжение '
'\"' # отоброжеение "
'\r' # возвращение кареткина в начало строки
'\v' # перенос на новую строку со смещением вправо на длину предыдущей строки
'hello\nworld'
# hello
# world

'hello\tworld'
# hello  world

'чтобы экранировать нужен символ \\'
# чтобы экранировать нужен символ \

'My website is Latracal \rSolution'
# Solutionte is Latracal

'hello\vworld'
# hello 
#      world


"===========Форматирование строк============="
title = 'Плов'
price = 1300
format1 = f'Название: {title}, цена: {price}'
# название: Плов, Цена: 1300


format2 = 'Название: %s, Цена: %s'
print(format2 % ("гуляш", "250"))
print(format2 % ("Самсы", "70"))
# название: гуляш, Цена: 250
# название: самсы, Цена: 70


format3 = 'Название: {}, Цена: {}'
print(format3.format('Шакарап', '35'))
# название: шакарап, Цена: 35


"==========методыстрок========"
# методы типов данных - функции, к которым мы обращаемся через точку
dir(str) # позволяет посмотреть все меетоды класса (типа данных)

'HELLO'. lower() # 'hello'
'hello'. upper() # 'HELLO'
'hello'. swapcase() # 'hELLO'
'heLLo'. titile() # 'Hello'
'hello'. title() # 'Hello World'
'hello'.capitalize() # 'Hello world'
'hello'.center(11) # '   center   '
'hello'.center(11) # '---hello---'
'hello'.count('l') # 2
'hello hello'.count('hello') # 2
'hello'.count('w') # 0

'hello'.startswith('hell') # True
'hello'.endswith('H') # False
'hello'.endswith('ld') # True

'hello world'.find(' ') # 5
'hello world'.find('o') # 4


'hello world'. split() # ['hello', 'world']



# конкатенация - склеивание строк
'hello' + 'world' - 'helloworld'





"============Индексы==================="
# порядковый номер символа в строке
'h e l l o  w o r l d'
#0 1 2 3 4 5 6 7 8 9 10
string = 'hello world'
string[0] # 'h'
string[10] # 'd'
string[5] # ' '


# срез - подстрока строки
string[0:4] # 'hello'
string[0:6] # 'hello'
string[2:4] # 'll'

string[:5] # ''hello'
string[6:] # 'world'
string[:] # 'hello world'
string[]


"=========Доп инфа==========="
a = 5
b = 5
print(id(a))
print(id(b))
print(hash(a))
print(hash(b))